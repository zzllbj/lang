import{_ as p,r as a,o as s,c as o,a as d,b as t,d as i,w as r,e as h}from"./app.17f9c5d8.js";const n={},l=h('<h1 id="nl" tabindex="-1"><a class="header-anchor" href="#nl" aria-hidden="true">#</a> nl</h1><h5 id="all-missed-29" tabindex="-1"><a class="header-anchor" href="#all-missed-29" aria-hidden="true">#</a> All missed: 29</h5><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h3><h5 id="missing-15" tabindex="-1"><a class="header-anchor" href="#missing-15" aria-hidden="true">#</a> Missing: 15</h5><table width="100%"><tr><th width="50%"><p>Key</p></th><th width="50%"><p>Value</p></th></tr><tr><td width="50%"><p>(and :count more error)</p></td><td width="50%"><p>(and :count more error)</p></td></tr><tr><td width="50%"><p>(and :count more errors)</p></td><td width="50%"><p>(and :count more errors)</p></td></tr><tr><td width="50%"><p>Choose Files</p></td><td width="50%"><p>Choose Files</p></td></tr><tr><td width="50%"><p>Drop file or click to choose</p></td><td width="50%"><p>Drop file or click to choose</p></td></tr><tr><td width="50%"><p>Drop files or click to choose</p></td><td width="50%"><p>Drop files or click to choose</p></td></tr><tr><td width="50%"><p>Filename</p></td><td width="50%"><p>Filename</p></td></tr><tr><td width="50%"><p>From</p></td><td width="50%"><p>From</p></td></tr><tr><td width="50%"><p>Iran, Islamic Republic Of</p></td><td width="50%"><p>Iran</p></td></tr><tr><td width="50%"><p>Log Viewer</p></td><td width="50%"><p>Log Viewer</p></td></tr><tr><td width="50%"><p>Logs</p></td><td width="50%"><p>Logs</p></td></tr><tr><td width="50%"><p>Select All Dropdown</p></td><td width="50%"><p>Select All Dropdown</p></td></tr><tr><td width="50%"><p>Start polling</p></td><td width="50%"><p>Start polling</p></td></tr><tr><td width="50%"><p>Stop polling</p></td><td width="50%"><p>Stop polling</p></td></tr><tr><td width="50%"><p>Type</p></td><td width="50%"><p>Type</p></td></tr><tr><td width="50%"><p>Unknown</p></td><td width="50%"><p>Unknown</p></td></tr></table>',5),w=d("a",{href:"#"},"to top",-1),c=h('<h3 id="php-inline" tabindex="-1"><a class="header-anchor" href="#php-inline" aria-hidden="true">#</a> php-inline</h3><h5 id="missing-10" tabindex="-1"><a class="header-anchor" href="#missing-10" aria-hidden="true">#</a> Missing: 10</h5><table width="100%"><tr><th width="50%"><p>Key</p></th><th width="50%"><p>Value</p></th></tr><tr><td width="50%"><p>doesnt_end_with</p></td><td width="50%"><p>This field may not end with one of the following: :values.</p></td></tr><tr><td width="50%"><p>doesnt_start_with</p></td><td width="50%"><p>This field may not start with one of the following: :values.</p></td></tr><tr><td width="50%"><p>max_digits</p></td><td width="50%"><p>This field must not have more than :max digits.</p></td></tr><tr><td width="50%"><p>min_digits</p></td><td width="50%"><p>This field must have at least :min digits.</p></td></tr><tr><td width="50%"><p>password.letters</p></td><td width="50%"><p>This field must contain at least one letter.</p></td></tr><tr><td width="50%"><p>password.mixed</p></td><td width="50%"><p>This field must contain at least one uppercase and one lowercase letter.</p></td></tr><tr><td width="50%"><p>password.numbers</p></td><td width="50%"><p>This field must contain at least one number.</p></td></tr><tr><td width="50%"><p>password.symbols</p></td><td width="50%"><p>This field must contain at least one symbol.</p></td></tr><tr><td width="50%"><p>password.uncompromised</p></td><td width="50%"><p>The given field has appeared in a data leak. Please choose a different field.</p></td></tr><tr><td width="50%"><p>required_if_accepted</p></td><td width="50%"><p>This field is required when :other is accepted.</p></td></tr></table>',3),m=d("a",{href:"#"},"to top",-1),u=h('<h3 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> php</h3><h5 id="missing-4" tabindex="-1"><a class="header-anchor" href="#missing-4" aria-hidden="true">#</a> Missing: 4</h5><table width="100%"><tr><th width="50%"><p>Key</p></th><th width="50%"><p>Value</p></th></tr><tr><td width="50%"><p>doesnt_end_with</p></td><td width="50%"><p>The :attribute may not end with one of the following: :values.</p></td></tr><tr><td width="50%"><p>max_digits</p></td><td width="50%"><p>The :attribute must not have more than :max digits.</p></td></tr><tr><td width="50%"><p>min_digits</p></td><td width="50%"><p>The :attribute must have at least :min digits.</p></td></tr><tr><td width="50%"><p>required_if_accepted</p></td><td width="50%"><p>The :attribute field is required when :other is accepted.</p></td></tr></table>',3),f=d("a",{href:"#"},"to top",-1);function _(g,b){const e=a("RouterLink");return s(),o("div",null,[l,d("p",null,[t("[ "),i(e,{to:"/status.html"},{default:r(()=>[t("go back")]),_:1}),t(" | "),w,t(" ]")]),c,d("p",null,[t("[ "),i(e,{to:"/status.html"},{default:r(()=>[t("go back")]),_:1}),t(" | "),m,t(" ]")]),u,d("p",null,[t("[ "),i(e,{to:"/status.html"},{default:r(()=>[t("go back")]),_:1}),t(" | "),f,t(" ]")])])}const T=p(n,[["render",_],["__file","nl.html.vue"]]);export{T as default};
